# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# If you don't have all the interpreters installed locally, run
#
# `tox --skip-missing-interpreter` to skip interpreters you don't have
#

[tox]
envlist =
	py27-ginkgo
	py27-hawthorn
	py27-hawthorn_multisite
	py35-juniper_community
	py35-juniper_multisite
	lint
	edx_lint_check

skip_missing_interpreters=true

[pytest]

[testenv]
download = true

deps =
	ginkgo: -r{toxinidir}/devsite/requirements/ginkgo.txt
	hawthorn: -r{toxinidir}/devsite/requirements/hawthorn.txt
	hawthorn_multisite: -r{toxinidir}/devsite/requirements/hawthorn_multisite.txt
	juniper_community: -r{toxinidir}/devsite/requirements/juniper_community.txt
	juniper_multisite: -r{toxinidir}/devsite/requirements/juniper_multisite.txt
	-r{toxinidir}/devsite/requirements/test.txt

whitelist_externals =
	git
	edx_lint_check

setenv =
	DJANGO_SETTINGS_MODULE = devsite.test_settings
	PYTHONPATH = {toxinidir}
	ginkgo: OPENEDX_RELEASE = GINKGO
	hawthorn: OPENEDX_RELEASE = HAWTHORN
	hawthorn_multisite: OPENEDX_RELEASE = HAWTHORN
	juniper_community: OPENEDX_RELEASE = JUNIPER
	juniper_multisite: OPENEDX_RELEASE = JUNIPER

commands = 
	ginkgo: pytest -c pytest-ginkgo.ini {posargs}
	hawthorn: pytest -c pytest-hawthorn.ini {posargs}
	hawthorn_multisite: pytest -c pytest-hawthorn.ini {posargs}
	juniper_community: pytest -c pytest-juniper.ini {posargs}
	juniper_multisite: pytest -c pytest-juniper.ini {posargs}

[testenv:lint]
basepython=python2
deps =
	-r{toxinidir}/devsite/requirements/hawthorn.txt
commands =
	flake8 figures devsite
	pylint --load-plugins pylint_django ./figures

[testenv:edx_lint_check]
basepython=python2
deps =
	-r{toxinidir}/devsite/requirements/hawthorn.txt
commands =
	edx_lint write pylintrc
	echo "If this fails, then you need to run '$ tox -e write_edx_lint' locally"
	git diff --exit-code  # Ensure pylintrc is up to date

[testenv:write_edx_lint]
basepython=python2
deps =
	-r{toxinidir}/devsite/requirements/hawthorn.txt
commands =
	edx_lint write pylintrc

[testenv:bandit]
deps =
    bandit==1.7.1
commands =
    bandit -c bandit.yaml -r figures
